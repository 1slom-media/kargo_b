type Query {
  users(id: Int): [User]
  kargos(id: Int, userId: Int): [Kargo]
  clients(id: Int, userId: Int): [Clients]
  orders(
    id: Int
    userId: Int
    skip: String
    take: String
    search: String
    status:String
  ): [Pagination]
}

type User {
  id: Int
  username: String
  phone: String
  avatar: String
  kargos: [Kargo]
  orders: [Orders]
  createdAt: String
  updateAt: String
}

type Pagination {
  pages: Int
  orders: [Orders]
}

type Kargo {
  id: Int
  title: String
  simplePrice: Float
  expensive: Float
  typeTitleSimple: String
  typeTitleExpensive: String
  date: String
  user: User
  createdAt: String
  updateAt: String
}

type Clients {
  id: Int
  firstName: String
  lastName: String
  phoneNumber1: String
  phoneNumber2: String
  location: String
  productCount: Int
  clientNetwork: String
  orders: [Orders]
  createdAt: String
  updateAt: String
}

type Orders {
  id: Int
  title: String
  price_region: Float
  count: Int
  weight: Float
  type: String
  logistica: String
  priceAll: Float
  logisticaPrice: Float
  logisticaPriceAll: Float
  productPrice: Float
  productPriceAll: Float
  status: String
  priceTitle: String
  image: String
  link: String
  orderPrice: String
  clients: [Clients]
  user: User
  createdAt: String
  updateAt: String
}
